
FROM  --platform=linux/amd64 ubuntu:22.04 AS build-stage


ENV PATH="/root/.local/bin:${PATH}"
ENV PKG_CONFIG_PATH="/root/.local/lib/pkgconfig"

SHELL ["/bin/bash", "-c"]

#RUN --mount=type=bind,source=/home/ubuntu/dockerdir/target,target=/app

#ADD ./target /app

RUN useradd -ms /bin/bash -g root -G sudo ubuntu

WORKDIR /build

ENV DEB=ats_9.1.3


ENV ATSPATH_SOURCE=.
ENV ATSPATH=/opt/ats/ats_9.1.3

ENV ARTIFACTS_SOURCE=aviatrix/build
ENV ARTIFACTS=/app/build/

ENV OPENSSL=/opt/ssl/openssl_1.1.1

#RUN  ATSPATH=/opt/ats/ats_9.1.3 && DEB=ats

#RUN echo ats_path > check.txt && echo deb_name >> check.txt

RUN mkdir $DEB && mkdir -p $DEB/opt/ats && mkdir -p $DEB/lib/systemd/system && mkdir -p $DEB/etc/logrotate.d && mkdir $DEB/DEBIAN && cd $DEB/DEBIAN && \
	printf "package: ats\nversion: 9.1.3\nmaintainer: Kasun\narchitecture: all\ndescription: testing it\n" > control

#USER root

RUN rm -f /etc/apt/apt.conf.d/docker-clean
RUN echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > \
    /etc/apt/apt.conf.d/keep-cache

RUN --mount=type=cache,target=/var/cache/apt \
	apt update && \
	apt install -y autoconf \
	automake \
	libtool \
	pkg-config \
	libmodule-install-perl \
	gcc \
	g++ \
	zlib1g-dev \
	libssl-dev \
	libcap-dev \
	libhwloc-dev \
	libncurses5-dev \
	libcurl4-openssl-dev \
	flex \
	make \
	patchelf

#USER root
RUN --mount=type=bind,rw,source=.,target=/app/thirdparty-trafficserver \
    --mount=type=bind,rw,source=aviatrix/build/debs,target=/app/build \
	cd / ; \
	tar xvzf /app/build/buildtools.tgz && \
	echo $PATH 
RUN echo $PKG_CONFIG_PATH
RUN ls /root/.local/lib/pkgconfig 

RUN --mount=type=bind,rw,source=.,target=/app/thirdparty-trafficserver \
	--mount=type=bind,rw,source=aviatrix/build/temp/cloudn,target=/app/cloudn \
    --mount=type=bind,rw,source=aviatrix/build/debs,target=/app/build \
	cd /app/thirdparty-trafficserver/plugins/experimental/policy_driver && \
	make -f Makefile-proto && \
    cd /app/thirdparty-trafficserver && \
    dpkg -i /app/build/openssl_1.1.1.deb && \
	echo $PATH && \
    patchelf --set-rpath $OPENSSL/lib $OPENSSL/bin/openssl && \
    autoreconf -if && \
	./configure --with-user=ubuntu --with-openssl=$OPENSSL --enable-tproxy --prefix=$ATSPATH --disable-dependency-checking --enable-example-plugins --enable-experimental-plugins && \
    PKG_CONFIG_PATH=/root/.local/lib/pkgconfig make -j 8 install && \
    cp -r aviatrix/9_1_3.0001/configs/* $ATSPATH/etc/trafficserver && \
    cp aviatrix/9_1_3.0001/avx-gw-trafficserver.service /build/$DEB/lib/systemd/system && \
	cp aviatrix/9_1_3.0001/logrotate/avx-gw-trafficserver /build/$DEB/etc/logrotate.d

#remounting here so we won't have to wait for trafficserver compilation to add changes to post install script
RUN --mount=type=bind,rw,source=.,target=/app/thirdparty-trafficserver \
	--mount=type=bind,rw,source=aviatrix/build/debs,target=/app/build \
	cd /app/thirdparty-trafficserver && \
	cp aviatrix/9_1_3.0001/postinst /build/$DEB/DEBIAN

RUN cp /usr/lib/x86_64-linux-gnu/libhwloc.so.5 $ATSPATH/lib/ && cp /usr/lib/x86_64-linux-gnu/libhwloc.so.5.7.6 $ATSPATH/lib/ && ln -sf $ATSPATH/lib/libhwloc.so.5.7.6 $ATSPATH/lib/libhwloc.so.5

RUN mkdir $ATSPATH/etc/local_ca && mkdir -p $ATSPATH/var/local_ca/keys && echo 12345 > $ATSPATH/var/local_ca/serial.txt  

#RUN mkdir -p /build/ats/opt/ats/ && mv /opt/ts_run /opt/ats_9.1.3 && mv /opt/ats_9.1.3 /build/ats/opt/ats/ats_9.1.3

RUN mv $ATSPATH /build/$DEB/opt/ats/

RUN chown root:root /build/$DEB/DEBIAN/postinst && chmod 0775 /build/$DEB/DEBIAN/postinst

WORKDIR /build

RUN dpkg-deb --build $DEB

#RUN ls /usr/lib/x86_64-linux-gnu | grep libhwloc > check.txt

#RUN cat /app/target/tosound > temp

#RUN ls /app  >> temp

FROM scratch AS export-stage

COPY --from=build-stage /build/ats_9.1.3.deb .

#COPY --from=build-stage /build/check.txt /build
